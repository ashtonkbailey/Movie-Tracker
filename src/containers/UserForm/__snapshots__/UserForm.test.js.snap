// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserForm UserForm Component should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="header-text"
        >
          Sign Up
        </h1>,
        <form
          onSubmit={[Function]}
        >
          <input
            name="name"
            onChange={[Function]}
            placeholder="Name"
            type="text"
            value=""
          />
          <input
            name="email"
            onChange={[Function]}
            placeholder="E-mail"
            type="email"
            value=""
          />
          <input
            name="password"
            onChange={[Function]}
            placeholder="Password"
            type="password"
            value=""
          />
          <button>
            Sign Up
          </button>
        </form>,
        <p
          className="user-msg false"
        />,
      ],
      "className": "user-form",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Sign Up",
          "className": "header-text",
        },
        "ref": null,
        "rendered": "Sign Up",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              name="name"
              onChange={[Function]}
              placeholder="Name"
              type="text"
              value=""
            />,
            <input
              name="email"
              onChange={[Function]}
              placeholder="E-mail"
              type="email"
              value=""
            />,
            <input
              name="password"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />,
            <button>
              Sign Up
            </button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "name",
              "onChange": [Function],
              "placeholder": "Name",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "email",
              "onChange": [Function],
              "placeholder": "E-mail",
              "type": "email",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "password",
              "onChange": [Function],
              "placeholder": "Password",
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign Up",
            },
            "ref": null,
            "rendered": "Sign Up",
            "type": "button",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
          "className": "user-msg false",
        },
        "ref": null,
        "rendered": null,
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="header-text"
          >
            Sign Up
          </h1>,
          <form
            onSubmit={[Function]}
          >
            <input
              name="name"
              onChange={[Function]}
              placeholder="Name"
              type="text"
              value=""
            />
            <input
              name="email"
              onChange={[Function]}
              placeholder="E-mail"
              type="email"
              value=""
            />
            <input
              name="password"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />
            <button>
              Sign Up
            </button>
          </form>,
          <p
            className="user-msg false"
          />,
        ],
        "className": "user-form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign Up",
            "className": "header-text",
          },
          "ref": null,
          "rendered": "Sign Up",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                name="name"
                onChange={[Function]}
                placeholder="Name"
                type="text"
                value=""
              />,
              <input
                name="email"
                onChange={[Function]}
                placeholder="E-mail"
                type="email"
                value=""
              />,
              <input
                name="password"
                onChange={[Function]}
                placeholder="Password"
                type="password"
                value=""
              />,
              <button>
                Sign Up
              </button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "name",
                "onChange": [Function],
                "placeholder": "Name",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "email",
                "onChange": [Function],
                "placeholder": "E-mail",
                "type": "email",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "password",
                "onChange": [Function],
                "placeholder": "Password",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sign Up",
              },
              "ref": null,
              "rendered": "Sign Up",
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "user-msg false",
          },
          "ref": null,
          "rendered": null,
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
